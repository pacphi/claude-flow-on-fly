# Claude Code Agent Manager Aliases
# This file contains shell aliases for agent management operations

# Core agent management
alias agent-install="agent-manager install"
alias agent-list="agent-manager list"
alias agent-update="agent-manager update"
alias agent-validate="agent-manager validate"

# Agent discovery and search
alias agent-count="agent-manager list --count 2>/dev/null || find /workspace/agents -name '*.md' 2>/dev/null | wc -l"
alias agent-sources="agent-manager validate --show-sources 2>/dev/null || echo 'Run agent-validate to see sources'"

# Install specific sources
alias install-voltagent="agent-manager install --source awesome-claude-code-subagents"
alias install-turbo-flow="agent-manager install --source turbo-flow-mandatory"

# Agent search by name (searches within files for name attribute)
alias agent-find='function _agent_find() { grep -r "name:" /workspace/agents/ 2>/dev/null | grep -i "$1" | cut -d: -f1 | sort | uniq; }; _agent_find'

# Sample agents for discovery
alias agent-sample="find /workspace/agents -name '*.md' 2>/dev/null | shuf | head -5 | xargs -I {} basename {} .md"

# Enhanced discovery functions
alias agent-by-category="find /workspace/agents -type d 2>/dev/null | sed 's|/workspace/agents/||' | grep -v '^$' | sort"
alias agent-with-keyword='function _agent_keyword() { find /workspace/agents -name "*${1}*" 2>/dev/null; }; _agent_keyword'

# Agent information and validation
alias agent-info='function _agent_info() { if [[ -f "$1" ]]; then echo "=== Agent Info ==="; grep -E "^(name:|description:)" "$1" 2>/dev/null || echo "No metadata found"; else echo "File not found: $1"; fi; }; _agent_info'
alias agent-validate-file='function _agent_validate() { if [[ -f "$1" ]]; then if grep -q "^name:" "$1" 2>/dev/null; then echo "✅ Valid agent: $1"; else echo "⚠️ Missing name field: $1"; fi; else echo "❌ File not found: $1"; fi; }; _agent_validate'

# Batch operations
alias agent-install-all="agent-manager install --all"
alias agent-backup="cp -r /workspace/agents /workspace/backups/agents-$(date +%Y%m%d-%H%M%S)"

# Configuration management
alias agent-config="nano /workspace/config/agents-config.yaml"
alias agent-config-validate="agent-manager validate --config-only"
alias agent-config-show="cat /workspace/config/agents-config.yaml"

# Maintenance aliases
alias agent-cleanup="find /workspace/agents -name '*.bak' -delete && find /workspace/agents -empty -type d -delete"
alias agent-stats="echo 'Total agents:' && agent-count && echo 'Categories:' && agent-by-category | wc -l"

# Development helpers for creating custom agents
alias new-agent='function _new_agent() { local name="$1"; if [[ -z "$name" ]]; then echo "Usage: new-agent <name>"; return 1; fi; local file="/workspace/agents/custom/${name}.md"; mkdir -p "$(dirname "$file")"; cat > "$file" << EOF
name: $name
description: Custom agent for specific tasks

## Instructions
You are a specialized agent that helps with...

## Capabilities
- Capability 1
- Capability 2

## Usage Examples
Use this agent when you need to...
EOF
echo "Created new agent template: $file"; }; _new_agent'

# Quick access to mandatory agents
alias doc-planner="cat /workspace/agents/doc-planner.md"
alias microtask-breakdown="cat /workspace/agents/microtask-breakdown.md"

# Integration with Claude Flow
alias cf-with-agents='function _cf_agents() { echo "Available agents: $(agent-count)"; echo "Mandatory agents loaded:"; doc-planner | head -5; echo "---"; microtask-breakdown | head -5; }; _cf_agents'