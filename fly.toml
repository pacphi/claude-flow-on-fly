# fly.toml configuration for Claude Development Environment
# This configuration optimizes for cost-effective remote development
# with scale-to-zero capabilities and persistent storage

app = "{{APP_NAME}}"
# Change to your preferred region
# Consult https://fly.io/docs/reference/regions/ for available regions
primary_region = "{{REGION}}"

# Build configuration
[build]
  dockerfile = "Dockerfile"

# Environment variables
[env]
  # User configuration
  DEV_USER = "developer"
  # SSH port (internal)
  SSH_PORT = "22"
  # Timezone
  TZ = "UTC"

# Volume mounts for persistent storage
[mounts]
  # Mount persistent volume for all development work
  source = "{{VOLUME_NAME}}"
  destination = "/workspace"

# SSH service configuration (primary access method)
[[services]]
  protocol = "tcp"
  internal_port = 22

  # Cost optimization settings
  auto_stop_machines = "suspend"
  auto_start_machines = true
  min_machines_running = 0

  # Port mapping for SSH access
  [[services.ports]]
    port = 10022  # External port for SSH

  # Health check for SSH service
  [[services.tcp_checks]]
    interval = "15s"
    timeout = "2s"
    grace_period = "10s"
    restart_limit = 0

# Machine configuration
[machine]
  # Auto-restart on failure
  auto_restart = true

  # Restart policy
  restart_policy = "always"

# VM resource allocation
# Start small and scale up if needed
[vm]
  # CPU and memory settings (adjust based on needs)
  cpu_kind = "{{CPU_KIND}}"    # Options: "shared", "performance"
  cpus = {{CPU_COUNT}}         # Number of CPUs
  memory = "{{VM_MEMORY}}mb"

# Deployment settings
[deploy]
  # Deployment strategy for zero-downtime updates
  strategy = "rolling"

  # Release command (runs once per deployment)
  release_command = "echo 'Deployment complete'"

# Monitoring and health checks
[checks]
  # SSH service health check
  [checks.ssh]
    type = "tcp"
    port = 22
    interval = "15s"
    timeout = "2s"

# Optional: Metrics and observability
[metrics]
  port = 9090
  path = "/metrics"

# Optional: Process groups for complex applications
# Uncomment if you need separate processes
# [processes]
#   app = "ssh-server"
#   worker = "background-tasks"

# Volume configuration reference
# Create volume with: flyctl volumes create claude_data --region iad --size 10
# Volume naming pattern: <app-name>_data
# Pricing: ~$0.15/GB/month

# Cost optimization notes:
# 1. auto_stop_machines = "suspend" - Fastest restart, lowest cost when idle
# 2. min_machines_running = 0 - Allows complete scale-to-zero
# 3. Shared CPU - Most cost-effective for development workloads
# 4. 1GB RAM - Sufficient for most development tasks, upgrade as needed

# Security notes:
# 1. SSH access only via key authentication (configured in Dockerfile)
# 2. Non-standard SSH port (10022) reduces automated attacks
# 3. Auto-restart on failure provides resilience
# 4. No root access via SSH (configured in Dockerfile)
# 5. Secrets management via Fly.io secrets:
#    - ANTHROPIC_API_KEY: Claude API authentication
#    - GITHUB_TOKEN: GitHub authentication for git operations
#    - GIT_USER_NAME: Git config user.name
#    - GIT_USER_EMAIL: Git config user.email
#    - GITHUB_USER: GitHub username for gh CLI

# Scaling notes:
# 1. Machines will automatically start on incoming connections
# 2. Adjust concurrency limits based on expected load
# 3. Consider performance CPU for intensive tasks
# 4. Increase memory if running memory-intensive operations

# Development workflow:
# 1. Deploy: flyctl deploy
# 2. Set secrets (optional):
#    flyctl secrets set ANTHROPIC_API_KEY=sk-ant-... -a <app-name>
#    flyctl secrets set GITHUB_TOKEN=ghp_... -a <app-name>
#    flyctl secrets set GIT_USER_NAME="Your Name" -a <app-name>
#    flyctl secrets set GIT_USER_EMAIL="you@example.com" -a <app-name>
# 3. Connect: ssh developer@<app-name>.fly.dev -p 10022
# 4. Work: All files in /workspace are persistent
# 5. Idle: VM automatically suspends after inactivity
# 6. Resume: VM starts automatically on next connection