#!/bin/bash
# 30-docker.sh.example - Install Docker tools and utilities
# Rename this file to 30-docker.sh to enable

# Source common utilities
source /workspace/scripts/lib/common.sh

print_status "Installing Docker development tools..."

# Docker Compose (if not already installed)
if ! command_exists docker-compose; then
    print_status "Installing Docker Compose..."

    COMPOSE_VERSION="v2.39.2"
    TEMP_FILE="/tmp/docker-compose-$$"

    if curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" \
       -o "${TEMP_FILE}" 2>/dev/null; then
        if sudo mv "${TEMP_FILE}" /usr/local/bin/docker-compose && \
           sudo chmod +x /usr/local/bin/docker-compose; then
            print_success "Docker Compose installed: $(docker-compose --version)"
        else
            rm -f "${TEMP_FILE}"
            print_warning "Failed to install Docker Compose"
        fi
    else
        rm -f "${TEMP_FILE}"
        print_warning "Failed to download Docker Compose"
    fi
fi

# Docker development utilities
print_status "Installing Docker utilities..."

# Install standalone binaries
if command_exists wget; then
    # Install dive
    if ! command_exists dive; then
        print_debug "Installing dive..."
        DIVE_VERSION="0.13.1"
        DEB_FILE="dive_${DIVE_VERSION}_linux_amd64.deb"

        if wget -q "https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/${DEB_FILE}"; then
            if sudo dpkg -i "${DEB_FILE}" 2>/dev/null; then
                rm -f "${DEB_FILE}"
                print_debug "✓ dive installed"
            else
                rm -f "${DEB_FILE}"
                print_warning "Failed to install dive"
            fi
        else
            rm -f "${DEB_FILE}"
            print_warning "Failed to download dive"
        fi
    fi

    # Install ctop
    if ! command_exists ctop; then
        print_debug "Installing ctop..."
        TEMP_FILE="/tmp/ctop-$$"

        if wget -q "https://github.com/bcicen/ctop/releases/download/v0.7.7/ctop-0.7.7-linux-amd64" \
           -O "${TEMP_FILE}"; then
            if sudo mv "${TEMP_FILE}" /usr/local/bin/ctop && \
               sudo chmod +x /usr/local/bin/ctop; then
                print_debug "✓ ctop installed"
            else
                rm -f "${TEMP_FILE}"
                print_warning "Failed to install ctop"
            fi
        else
            rm -f "${TEMP_FILE}"
            print_warning "Failed to download ctop"
        fi
    fi
fi

# Create useful Docker aliases
print_status "Creating Docker aliases..."

docker_aliases="
# Docker aliases
alias dps='docker ps'
alias dpa='docker ps -a'
alias di='docker images'
alias drmi='docker rmi'
alias dstop='docker stop'
alias dstart='docker start'
alias drestart='docker restart'
alias dlogs='docker logs'
alias dexec='docker exec -it'
alias dclean='docker system prune -f'
alias dcleanall='docker system prune -a -f'

# Docker Compose aliases
alias dc='docker-compose'
alias dcup='docker-compose up'
alias dcdown='docker-compose down'
alias dcbuild='docker-compose build'
alias dclogs='docker-compose logs'
"

echo "$docker_aliases" >> ~/.bashrc

print_success "Docker development tools configured"
